# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'telaPrincipal.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, Qt


from CadastroProdutos import Ui_CadastroProdutos
from telaAtualizar import Ui_Update
import sqlite3

BancoNovo = ""

class Ui_TelaPrincipal(object):
    def enviarBanco(self):
        self.UiAtualizando.receberBanco(BancoNovo)

    def celulaFoiClicada(self):
        self.Atualiza = QtWidgets.QMainWindow()
        self.ui = Ui_Update()
        self.ui.setupUi(self.Atualiza)


        row = self.tableWidget.currentItem().row()
        print("row= " + str(row))
        col = self.tableWidget.currentItem().column()
        print("col= " + str(col))
        item = self.tableWidget.horizontalHeaderItem(col).text()
        print("item= " + str(item))
        ValorCelula = self.tableWidget.item(row,col).text()

        conn = sqlite3.connect(BancoNovo)
        celula = conn.cursor()

        celula.execute("SELECT ID FROM produtos")
        valorId = celula.fetchall()
        print(valorId)

        valorCorreto = valorId[row]
        valorConsertado = str(valorCorreto).translate({ord(letter): None for letter in "('),"})

        self.UiAtualizando.receberBanco(BancoNovo, valorConsertado)
        self.Atualiza.show()


    def tabom(self,email):
        emailConsertado = str(email).translate({ord(letter): None for letter in "('),"})
        caminho = "BancoDeDadosClientes/"
        nomeBanco = caminho + emailConsertado + ".db"
        criarDb = sqlite3.connect(nomeBanco)
        criando = criarDb.cursor()
        criando.execute("CREATE TABLE IF NOT EXISTS produtos (ID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, nome VARCHAR, quantidade VARCHAR, categoria VARCHAR, preco VARCHAR);")

        global BancoNovo
        BancoNovo = nomeBanco

    def telaCadastroProduto(self):
        self.novaJanela = QtWidgets.QMainWindow()
        self.ui = Ui_CadastroProdutos()
        self.ui.setupUi(self.novaJanela)
        self.ui.pegandoBancoDeDados(BancoNovo)
        self.novaJanela.show()
    def atualizaDados(self):
        conn = sqlite3.connect(BancoNovo)
        listaDb = conn.cursor()
        listaDb.execute("SELECT * FROM produtos")
        listaDbVar = listaDb.fetchall()
        print(listaDbVar)
        self.tableWidget.update()
        self.tableWidget.setRowCount(len(listaDbVar))
        self.tableWidget.setColumnCount(5)
        for i in range (len(listaDbVar)):
            for j in range (5):
                item = Qt.QTableWidgetItem('%s' % (listaDbVar[i][j]))
                self.tableWidget.setItem(i,j,item)
        conn.close()

    def setupUi(self, MainWindow):
        """self.UiAtualizando = Ui_Update()
        conn = sqlite3.connect(BancoNovo)

        listaDb = conn.cursor()
        listaDb.execute("SELECT * FROM produtos")
        listaDbVar = listaDb.fetchall()

        print("O banco foi criado com o nome "+BancoNovo)
        conn.commit()
        conn.close()"""


        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 487)
        MainWindow.setStyleSheet("background-color: pink;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(80, 60, 601, 321))
        self.tableWidget.setStyleSheet("background-color: white;\n"
"font-size: 11pt;")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEnabled)
        self.tableWidget.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEnabled)
        self.tableWidget.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEnabled)
        self.tableWidget.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEnabled)
        self.tableWidget.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEnabled)
        self.tableWidget.setItem(0, 4, item)



        r = self.tableWidget.currentRow()
        id = self.tableWidget.item(r, 0)
        produto = self.tableWidget.item(r, 1)
        quantidade = self.tableWidget.item(r, 2)
        categoria = self.tableWidget.item(r, 3)
        preco = self.tableWidget.item(r, 4)

        self.tableWidget.cellDoubleClicked.connect(self.celulaFoiClicada)


        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(300, 390, 161, 51))
        self.label_2.setStyleSheet("font-size: 20pt;\n"
"font-family: Arial sans-serif;")
        self.label_2.setObjectName("label_2")
        self.EditTextPesquisa = QtWidgets.QTextEdit(self.centralwidget)
        self.EditTextPesquisa.setGeometry(QtCore.QRect(70, 10, 631, 41))
        self.EditTextPesquisa.setStyleSheet("background-color: white;\n"
"font-size: 14pt;")
        self.EditTextPesquisa.setObjectName("EditTextPesquisa")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.LeftToolBarArea, self.toolBar)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        self.menuSobre = QtWidgets.QMenu(self.menubar)
        self.menuSobre.setObjectName("menuSobre")
        MainWindow.setMenuBar(self.menubar)
        self.actionCadastrar = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/Icons/iconCadastro/add.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCadastrar.setIcon(icon)
        self.actionCadastrar.setObjectName("actionCadastrar")
        self.actionCadastrar.triggered.connect(self.telaCadastroProduto)


        self.actionAtualizar = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/Icons/iconCadastro/refresh.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAtualizar.setIcon(icon1)
        self.actionAtualizar.setObjectName("actionAtualizar")
        self.actionAtualizar.triggered.connect(self.atualizaDados)

        self.actionBuscar = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/Icons/iconCadastro/buscar.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBuscar.setIcon(icon2)
        self.actionBuscar.setObjectName("actionBuscar")
        self.toolBar.addAction(self.actionBuscar)
        self.toolBar.addAction(self.actionCadastrar)
        self.toolBar.addAction(self.actionAtualizar)
        self.toolBar.addSeparator()
        self.menubar.addAction(self.menuSobre.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))

        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Código"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Produto"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Quantidade"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Categoria"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Preço"))
        __sortingEnabled = self.tableWidget.isSortingEnabled()
        self.tableWidget.setSortingEnabled(False)
        self.tableWidget.setSortingEnabled(__sortingEnabled)
        self.label_2.setText(_translate("MainWindow", "PRODUTOS"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.menuSobre.setTitle(_translate("MainWindow", "Sobre"))
        self.actionCadastrar.setText(_translate("MainWindow", "Cadastrar"))
        self.actionAtualizar.setText(_translate("MainWindow", "Atualizar"))
        self.actionBuscar.setText(_translate("MainWindow", "Buscar"))
import imagemPrincipal


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_TelaPrincipal()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
